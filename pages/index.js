import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { ApolloClient, InMemoryCache, gql } from "@apollo/client";
//
export default function Home({ launches }) {
  //
  console.log("Heree launches -->", launches);
  //
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        {/* <link rel="stylesheet" href="https://unpkg.com/tachyons@4.12.0/css/tachyons.min.css"/> */}
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>SpaceX Launches</h1>

        <p className={styles.description}>Latest Launches</p>

        <div className={'flex'}>
          {launches.launchesPast.map((item, index) => {
            return (
              <div
                key={index}
                href="https://nextjs.org/docs"
                // className={styles.card}
                className={'outline w-25 pa3 mr2'}
              >
                <h2>Mission: {item.mission_name}</h2>
                <p>{item.rocket.rocket_name}</p>
                {/* <p>{item.launch_site.site_name_long}</p>
                <p>{item.launch_date_local}</p> */}
              </div>
            );
          })}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export async function getStaticProps() {
  //
  const client = new ApolloClient({
    uri: "https://api.spacex.land/graphql/",
    cache: new InMemoryCache(),
  });
  //
  const { data } = await client.query({
    query: gql`
      query {
        launchesPast(limit: 10) {
          mission_name
          launch_date_local
          launch_site {
            site_name_long
          }
          links {
            article_link
            video_link
          }
          rocket {
            rocket_name
            rocket_type
          }
          ships {
            name
            home_port
            image
          }
        }
      }
    `,
  });
  //
  return {
    props: {
      launches: data,
    },
  };
}
